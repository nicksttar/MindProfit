// src/pages/CurrentProjectsView.js
import React, { useState, useEffect } from 'react';
import axios from 'axios';

// –ò–ó–ú–ï–ù–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
const Modal = ({ isOpen, onClose, title, children }) => {
    if (!isOpen) return null;

    return (
        <div style={{
            position: 'fixed',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            backgroundColor: 'rgba(0, 0, 0, 0.7)',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            zIndex: 1050,
        }}>
            <div className="stat-card p-4" style={{ width: '100%', maxWidth: '550px', maxHeight: '80vh', overflowY: 'auto', backgroundColor: '#161B22', borderRadius: '8px' }}>
                <div className="d-flex justify-content-between align-items-center mb-3">
                    <h5 className="fw-bold mb-0">{title}</h5>
                    <button onClick={onClose} className="btn-close btn-close-white"></button>
                </div>
                <div>{children}</div>
            </div>
        </div>
    );
};

const CurrentProjectsView = () => {
    const [projects, setProjects] = useState([]);
    const [isLoading, setIsLoading] = useState(true);
    const [error, setError] = useState('');
    const [selectedProject, setSelectedProject] = useState(null); // –ò–ó–ú–ï–ù–ï–ù–û: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞

    useEffect(() => {
        const fetchProjects = async () => {
            try {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–∞—à –±—ç–∫–µ–Ω–¥
                const res = await axios.get('http://localhost:5000/api/projects');
                setProjects(res.data);
            } catch (err) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–µ–∫—Ç–æ–≤:", err);
                setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–µ–∫—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
            } finally {
                setIsLoading(false);
            }
        };

        fetchProjects();
    }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑

    // –ü–æ–∫–∞ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞
    if (isLoading) {
        return <div className="text-center p-5"><h4>üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤...</h4></div>;
    }

    // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    if (error) {
        return <div className="text-center p-5 alert alert-danger">{error}</div>;
    }

    return (
        <div className="container my-5">
            {/* –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ –Ω–µ—Ç */}
            {projects.length === 0 ? (
                <div className="text-center p-5 action-card">
                     <p style={{ color: '#9CA3AF' }}>–ü–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ –∏—Ö –¥–æ–±–∞–≤–∏—Ç!</p>
                </div>
            ) : (
                // –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç—ã –µ—Å—Ç—å, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ö –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç–æ—á–µ–∫
                <div className="row g-4">
                    {projects.map(project => {
                        const isLong = project.description.length > 150;
                        const description = isLong 
                            ? `${project.description.substring(0, 150)}...` 
                            : project.description;

                        return (
                            <div className="col-md-6 col-lg-4" key={project._id}>
                                <div className="card h-100 shadow-sm border-0 d-flex flex-column">
                                    <div className="card-body d-flex flex-column">
                                        <h5 className="card-title fw-bold">{project.title}</h5>
                                        <p className="card-text flex-grow-1" style={{ color: '#6B7280', whiteSpace: 'pre-line' }}>{description}</p>
                                        
                                        {/* –ò–ó–ú–ï–ù–ï–ù–û: –ë–ª–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ */}
                                        <div className="mt-auto d-flex gap-2">
                                            {project.link && (
                                                <a href={project.link} className="btn btn-primary flex-grow-1" target="_blank" rel="noopener noreferrer">
                                                    –ü–µ—Ä–µ–π—Ç–∏
                                                </a>
                                            )}
                                            {isLong && (
                                                <button onClick={() => setSelectedProject(project)} className="btn btn-outline-secondary">–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ</button>
                                            )}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        );
                    })}
                </div>
            )}

            {/* –ò–ó–ú–ï–ù–ï–ù–û: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ */}
            {selectedProject && (
                <Modal 
                    isOpen={!!selectedProject} 
                    onClose={() => setSelectedProject(null)} 
                    title={selectedProject.title}
                >
                    <p style={{ color: '#9CA3AF', whiteSpace: 'pre-line' }}>{selectedProject.description}</p>
                    {selectedProject.link && (
                        <a href={selectedProject.link} className="btn btn-primary mt-3" target="_blank" rel="noopener noreferrer">–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–æ–µ–∫—Ç—É</a>
                    )}
                </Modal>
            )}
        </div>
    );
};

export default CurrentProjectsView;
